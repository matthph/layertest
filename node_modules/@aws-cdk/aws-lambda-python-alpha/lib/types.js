"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNzZXRIYXNoVHlwZSwgRG9ja2VySW1hZ2UgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5cblxuLyoqXG4gKiBPcHRpb25zIGZvciBidW5kbGluZ1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEJ1bmRsaW5nT3B0aW9ucyB7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gZXhwb3J0IFBvZXRyeSBkZXBlbmRlbmNpZXMgd2l0aCBoYXNoZXMuIE5vdGUgdGhhdCB0aGlzIGNhbiBjYXVzZSBidWlsZHMgdG8gZmFpbCBpZiBub3QgYWxsIGRlcGVuZGVuY2llc1xuICAgKiBleHBvcnQgd2l0aCBhIGhhc2guXG4gICAqXG4gICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2F3cy9hd3MtY2RrL2lzc3Vlcy8xOTIzMlxuICAgKiBAZGVmYXVsdCBIYXNoZXMgYXJlIE5PVCBpbmNsdWRlZCBpbiB0aGUgZXhwb3J0ZWQgYHJlcXVpcmVtZW50cy50eHRgIGZpbGVcbiAgICovXG4gIHJlYWRvbmx5IHBvZXRyeUluY2x1ZGVIYXNoZXM/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBPdXRwdXQgcGF0aCBzdWZmaXg6IHRoZSBzdWZmaXggZm9yIHRoZSBkaXJlY3RvcnkgaW50byB3aGljaCB0aGUgYnVuZGxlZCBvdXRwdXQgaXMgd3JpdHRlbi5cbiAgICpcbiAgICogQGRlZmF1bHQgLSAncHl0aG9uJyBmb3IgYSBsYXllciwgZW1wdHkgc3RyaW5nIG90aGVyd2lzZS5cbiAgICovXG4gIHJlYWRvbmx5IG91dHB1dFBhdGhTdWZmaXg/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIERvY2tlciBpbWFnZSB0byB1c2UgZm9yIGJ1bmRsaW5nLiBJZiBubyBvcHRpb25zIGFyZSBwcm92aWRlZCwgdGhlIGRlZmF1bHQgYnVuZGxpbmcgaW1hZ2VcbiAgICogd2lsbCBiZSB1c2VkLiBEZXBlbmRlbmNpZXMgd2lsbCBiZSBpbnN0YWxsZWQgdXNpbmcgdGhlIGRlZmF1bHQgcGFja2FnaW5nIGNvbW1hbmRzXG4gICAqIGFuZCBjb3BpZWQgb3ZlciBmcm9tIGludG8gdGhlIExhbWJkYSBhc3NldC5cbiAgICpcbiAgICogQGRlZmF1bHQgLSBEZWZhdWx0IGJ1bmRsaW5nIGltYWdlLlxuICAgKi9cbiAgcmVhZG9ubHkgaW1hZ2U/OiBEb2NrZXJJbWFnZTtcblxuICAvKipcbiAgICogT3B0aW9uYWwgYnVpbGQgYXJndW1lbnRzIHRvIHBhc3MgdG8gdGhlIGRlZmF1bHQgY29udGFpbmVyLiBUaGlzIGNhbiBiZSB1c2VkIHRvIGN1c3RvbWl6ZVxuICAgKiB0aGUgaW5kZXggVVJMcyB1c2VkIGZvciBpbnN0YWxsaW5nIGRlcGVuZGVuY2llcy5cbiAgICogVGhpcyBpcyBub3QgdXNlZCBpZiBhIGN1c3RvbSBpbWFnZSBpcyBwcm92aWRlZC5cbiAgICpcbiAgICogQGRlZmF1bHQgLSBObyBidWlsZCBhcmd1bWVudHMuXG4gICAqL1xuICByZWFkb25seSBidWlsZEFyZ3M/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xuXG4gIC8qKlxuICAgKiBFbnZpcm9ubWVudCB2YXJpYWJsZXMgZGVmaW5lZCB3aGVuIGJ1bmRsaW5nIHJ1bnMuXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gbm8gZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBkZWZpbmVkLlxuICAgKi9cbiAgcmVhZG9ubHkgZW52aXJvbm1lbnQ/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZzsgfTtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyBob3cgYXNzZXQgaGFzaCBpcyBjYWxjdWxhdGVkLiBBc3NldHMgd2lsbCBnZXQgcmVidWlsZCBhbmRcbiAgICogdXBsb2FkZWQgb25seSBpZiB0aGVpciBoYXNoIGhhcyBjaGFuZ2VkLlxuICAgKlxuICAgKiBJZiBhc3NldCBoYXNoIGlzIHNldCB0byBgU09VUkNFYCAoZGVmYXVsdCksIHRoZW4gb25seSBjaGFuZ2VzIHRvIHRoZSBzb3VyY2VcbiAgICogZGlyZWN0b3J5IHdpbGwgY2F1c2UgdGhlIGFzc2V0IHRvIHJlYnVpbGQuIFRoaXMgbWVhbnMsIGZvciBleGFtcGxlLCB0aGF0IGluXG4gICAqIG9yZGVyIHRvIHBpY2sgdXAgYSBuZXcgZGVwZW5kZW5jeSB2ZXJzaW9uLCBhIGNoYW5nZSBtdXN0IGJlIG1hZGUgdG8gdGhlXG4gICAqIHNvdXJjZSB0cmVlLiBJZGVhbGx5LCB0aGlzIGNhbiBiZSBpbXBsZW1lbnRlZCBieSBpbmNsdWRpbmcgYSBkZXBlbmRlbmN5XG4gICAqIGxvY2tmaWxlIGluIHlvdXIgc291cmNlIHRyZWUgb3IgdXNpbmcgZml4ZWQgZGVwZW5kZW5jaWVzLlxuICAgKlxuICAgKiBJZiB0aGUgYXNzZXQgaGFzaCBpcyBzZXQgdG8gYE9VVFBVVGAsIHRoZSBoYXNoIGlzIGNhbGN1bGF0ZWQgYWZ0ZXJcbiAgICogYnVuZGxpbmcuIFRoaXMgbWVhbnMgdGhhdCBhbnkgY2hhbmdlIGluIHRoZSBvdXRwdXQgd2lsbCBjYXVzZSB0aGUgYXNzZXQgdG9cbiAgICogYmUgaW52YWxpZGF0ZWQgYW5kIHVwbG9hZGVkLiBCZWFyIGluIG1pbmQgdGhhdCBgcGlwYCBhZGRzIHRpbWVzdGFtcHMgdG9cbiAgICogZGVwZW5kZW5jaWVzIGl0IGluc3RhbGxzLCB3aGljaCBpbXBsaWVzIHRoYXQgaW4gdGhpcyBtb2RlIFB5dGhvbiBidW5kbGVzXG4gICAqIHdpbGwgX2Fsd2F5c18gZ2V0IHJlYnVpbGQgYW5kIHVwbG9hZGVkLiBOb3JtYWxseSB0aGlzIGlzIGFuIGFudGktcGF0dGVyblxuICAgKiBzaW5jZSBidWlsZFxuICAgKlxuICAgKiBAZGVmYXVsdCBBc3NldEhhc2hUeXBlLlNPVVJDRSBCeSBkZWZhdWx0LCBoYXNoIGlzIGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlXG4gICAqIGNvbnRlbnRzIG9mIHRoZSBzb3VyY2UgZGlyZWN0b3J5LiBUaGlzIG1lYW5zIHRoYXQgb25seSB1cGRhdGVzIHRvIHRoZVxuICAgKiBzb3VyY2Ugd2lsbCBjYXVzZSB0aGUgYXNzZXQgdG8gcmVidWlsZC5cbiAgICovXG5cbiAgcmVhZG9ubHkgYXNzZXRIYXNoVHlwZT86IEFzc2V0SGFzaFR5cGU7XG5cbiAgLyoqXG4gICAqIFNwZWNpZnkgYSBjdXN0b20gaGFzaCBmb3IgdGhpcyBhc3NldC4gSWYgYGFzc2V0SGFzaFR5cGVgIGlzIHNldCBpdCBtdXN0XG4gICAqIGJlIHNldCB0byBgQXNzZXRIYXNoVHlwZS5DVVNUT01gLiBGb3IgY29uc2lzdGVuY3ksIHRoaXMgY3VzdG9tIGhhc2ggd2lsbFxuICAgKiBiZSBTSEEyNTYgaGFzaGVkIGFuZCBlbmNvZGVkIGFzIGhleC4gVGhlIHJlc3VsdGluZyBoYXNoIHdpbGwgYmUgdGhlIGFzc2V0XG4gICAqIGhhc2guXG4gICAqXG4gICAqIE5PVEU6IHRoZSBoYXNoIGlzIHVzZWQgaW4gb3JkZXIgdG8gaWRlbnRpZnkgYSBzcGVjaWZpYyByZXZpc2lvbiBvZiB0aGUgYXNzZXQsIGFuZFxuICAgKiB1c2VkIGZvciBvcHRpbWl6aW5nIGFuZCBjYWNoaW5nIGRlcGxveW1lbnQgYWN0aXZpdGllcyByZWxhdGVkIHRvIHRoaXMgYXNzZXQgc3VjaCBhc1xuICAgKiBwYWNrYWdpbmcsIHVwbG9hZGluZyB0byBBbWF6b24gUzMsIGV0Yy4gSWYgeW91IGNob3NlIHRvIGN1c3RvbWl6ZSB0aGUgaGFzaCwgeW91IHdpbGxcbiAgICogbmVlZCB0byBtYWtlIHN1cmUgaXQgaXMgdXBkYXRlZCBldmVyeSB0aW1lIHRoZSBhc3NldCBjaGFuZ2VzLCBvciBvdGhlcndpc2UgaXQgaXNcbiAgICogcG9zc2libGUgdGhhdCBzb21lIGRlcGxveW1lbnRzIHdpbGwgbm90IGJlIGludmFsaWRhdGVkLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIEJhc2VkIG9uIGBhc3NldEhhc2hUeXBlYFxuICAgKi9cbiAgcmVhZG9ubHkgYXNzZXRIYXNoPzogc3RyaW5nO1xufVxuIl19